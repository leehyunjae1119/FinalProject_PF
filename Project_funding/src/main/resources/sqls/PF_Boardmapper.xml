<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="pf_board">

	<!--  <select id="selectBoardList" resultType="PF_BoardDto">
				SELECT * FROM PF_BOARD
		  </select>
	-->
	
<!-- 	<select id="listPage" resultType="PF_BoardDto" > -->
<!-- 	<![CDATA[ SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT,PROJECT_MONEY,PROJECT_TERM,RECRUIT_PERSONNEL, -->
<!-- 	BOARD_REGDATE,USER_NO FROM(SELECT  BOARD_NO, BOARD_TITLE, BOARD_CONTENT,PROJECT_MONEY,PROJECT_TERM,RECRUIT_PERSONNEL, -->
<!-- 	BOARD_REGDATE,USER_NO, RN  FROM(SELECT  BOARD_NO, BOARD_TITLE, BOARD_CONTENT,PROJECT_MONEY,PROJECT_TERM,RECRUIT_PERSONNEL, -->
<!-- 	BOARD_REGDATE,USER_NO, ROWNUM AS RN FROM (SELECT  BOARD_NO, BOARD_TITLE, BOARD_CONTENT,PROJECT_MONEY,PROJECT_TERM,RECRUIT_PERSONNEL, -->
<!-- 	BOARD_REGDATE,USER_NO FROM PF_BOARD ORDER BY BOARD_NO DESC))WHERE RN <= #{page} * 10) WHERE RN >=(#{page} -1) * 10 +1]]> -->
<!-- 	</select> -->
	
	<!-- 프로젝트찾기 -->
   <select id="listPage" resultType="PF_BoardDto" >
   <![CDATA[ SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT,PROJECT_MONEY,PROJECT_TERM,RECRUIT_PERSONNEL,
   BOARD_REGDATE,USER_NO FROM(SELECT  BOARD_NO, BOARD_TITLE, BOARD_CONTENT,PROJECT_MONEY,PROJECT_TERM,RECRUIT_PERSONNEL,
   BOARD_REGDATE,USER_NO, RN  FROM(SELECT  BOARD_NO, BOARD_TITLE, BOARD_CONTENT,PROJECT_MONEY,PROJECT_TERM,RECRUIT_PERSONNEL,
   BOARD_REGDATE,USER_NO, ROWNUM AS RN FROM (SELECT  BOARD_NO, BOARD_TITLE, BOARD_CONTENT,PROJECT_MONEY,PROJECT_TERM,RECRUIT_PERSONNEL,
   BOARD_REGDATE,USER_NO FROM PF_BOARD ORDER BY BOARD_NO DESC))WHERE RN <= #{page} * 10) WHERE RN >=(#{page} -1) * 10 +1]]>
   </select>
   
   <!-- 금액 높은 순 -->
   <select id="listPage_Money" resultType="PF_BoardDto" >
   <![CDATA[ SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT,PROJECT_MONEY,PROJECT_TERM,RECRUIT_PERSONNEL,
   BOARD_REGDATE,USER_NO FROM(SELECT  BOARD_NO, BOARD_TITLE, BOARD_CONTENT,PROJECT_MONEY,PROJECT_TERM,RECRUIT_PERSONNEL,
   BOARD_REGDATE,USER_NO, RN  FROM(SELECT  BOARD_NO, BOARD_TITLE, BOARD_CONTENT,PROJECT_MONEY,PROJECT_TERM,RECRUIT_PERSONNEL,
   BOARD_REGDATE,USER_NO, ROWNUM AS RN FROM (SELECT  BOARD_NO, BOARD_TITLE, BOARD_CONTENT,PROJECT_MONEY,PROJECT_TERM,RECRUIT_PERSONNEL,
   BOARD_REGDATE,USER_NO FROM PF_BOARD ORDER BY PROJECT_MONEY DESC))WHERE RN <= #{page} * 10) WHERE RN >=(#{page} -1) * 10 +1]]>
   </select>
   
   <!-- 마감순 -->
   <select id="listPage_Date" resultType="PF_BoardDto" >
   <![CDATA[ SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT,PROJECT_MONEY,PROJECT_TERM,RECRUIT_PERSONNEL,RECRUIT_DATE,
   BOARD_REGDATE,USER_NO FROM(SELECT  BOARD_NO, BOARD_TITLE, BOARD_CONTENT,PROJECT_MONEY,PROJECT_TERM,RECRUIT_PERSONNEL,RECRUIT_DATE,
   BOARD_REGDATE,USER_NO, RN  FROM(SELECT  BOARD_NO, BOARD_TITLE, BOARD_CONTENT,PROJECT_MONEY,PROJECT_TERM,RECRUIT_PERSONNEL,RECRUIT_DATE,
   BOARD_REGDATE,USER_NO, ROWNUM AS RN FROM (SELECT  BOARD_NO, BOARD_TITLE, BOARD_CONTENT,PROJECT_MONEY,PROJECT_TERM,RECRUIT_PERSONNEL,RECRUIT_DATE,
   BOARD_REGDATE,USER_NO FROM PF_BOARD ORDER BY RECRUIT_DATE ASC))WHERE RN <= #{page} * 10) WHERE RN >=(#{page} -1) * 10 +1]]>
   </select>
   
   <!-- keyword 검색 -->
   <select id="search" parameterType="map" resultType="PF_BoardDto">
   <![CDATA[ SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT,PROJECT_MONEY,PROJECT_TERM,RECRUIT_PERSONNEL,
   BOARD_REGDATE FROM(SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT,PROJECT_MONEY,PROJECT_TERM,RECRUIT_PERSONNEL,
   BOARD_REGDATE, RN FROM(SELECT  BOARD_NO, BOARD_TITLE, BOARD_CONTENT,PROJECT_MONEY,PROJECT_TERM,RECRUIT_PERSONNEL,
   BOARD_REGDATE, ROWNUM AS RN FROM (SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT,PROJECT_MONEY,PROJECT_TERM,RECRUIT_PERSONNEL,
   BOARD_REGDATE  FROM PF_BOARD WHERE BOARD_TITLE LIKE '%'||#{board_title}||'%' ORDER BY BOARD_NO DESC))WHERE RN <= #{page} * 10) WHERE RN >=(#{page} -1) * 10 +1]]>
   </select>   
   
  <!-- detail 검색 두조건 만족시 -->
    <select id="detail_category1" parameterType="map"  resultType="PF_BoardDto" >
   <![CDATA[ SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT,PROJECT_MONEY,PROJECT_TERM,RECRUIT_PERSONNEL,
   BOARD_REGDATE,PROJECT_CATEGORY FROM(SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT,PROJECT_MONEY,PROJECT_TERM,RECRUIT_PERSONNEL,
   BOARD_REGDATE,PROJECT_CATEGORY, RN FROM(SELECT  BOARD_NO, BOARD_TITLE, BOARD_CONTENT,PROJECT_MONEY,PROJECT_TERM,RECRUIT_PERSONNEL,
   BOARD_REGDATE,PROJECT_CATEGORY, ROWNUM AS RN FROM (SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT,PROJECT_MONEY,PROJECT_TERM,RECRUIT_PERSONNEL,
   BOARD_REGDATE,PROJECT_CATEGORY  FROM PF_BOARD WHERE REGEXP_LIKE(PROJECT_CATEGORY, #{category1})AND PROJECT_MONEY <= #{category2} ORDER BY BOARD_NO DESC))WHERE RN <= #{page} * 10) WHERE RN >=(#{page} -1) * 10 +1]]>
   </select>  
   	 <!-- 진행중인 프로젝트 리스트 -->
     <select id="ing_list" parameterType="map" resultType="PF_BoardDto">
   <![CDATA[ SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT,PROJECT_MONEY,PROJECT_TERM,RECRUIT_PERSONNEL,PROJECT_STATE,
   BOARD_REGDATE FROM(SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT,PROJECT_MONEY,PROJECT_TERM,RECRUIT_PERSONNEL,PROJECT_STATE,
   BOARD_REGDATE, RN FROM(SELECT  BOARD_NO, BOARD_TITLE, BOARD_CONTENT,PROJECT_MONEY,PROJECT_TERM,RECRUIT_PERSONNEL,PROJECT_STATE,
   BOARD_REGDATE, ROWNUM AS RN FROM (SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT,PROJECT_MONEY,PROJECT_TERM,RECRUIT_PERSONNEL,PROJECT_STATE,
   BOARD_REGDATE  FROM PF_BOARD WHERE PROJECT_STATE = '진행중' ORDER BY BOARD_NO DESC))WHERE RN <= #{page} * 10) WHERE RN >=(#{page} -1) * 10 +1]]>
   </select>  
   
   <!-- 완료된 프로젝트 리스트 -->
     <select id="end_list" parameterType="map" resultType="PF_BoardDto">
   <![CDATA[ SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT,PROJECT_MONEY,PROJECT_TERM,RECRUIT_PERSONNEL,PROJECT_STATE,
   BOARD_REGDATE FROM(SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT,PROJECT_MONEY,PROJECT_TERM,RECRUIT_PERSONNEL,PROJECT_STATE,
   BOARD_REGDATE, RN FROM(SELECT  BOARD_NO, BOARD_TITLE, BOARD_CONTENT,PROJECT_MONEY,PROJECT_TERM,RECRUIT_PERSONNEL,PROJECT_STATE,
   BOARD_REGDATE, ROWNUM AS RN FROM (SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT,PROJECT_MONEY,PROJECT_TERM,RECRUIT_PERSONNEL,PROJECT_STATE,
   BOARD_REGDATE  FROM PF_BOARD WHERE PROJECT_STATE = '완료' ORDER BY BOARD_NO DESC))WHERE RN <= #{page} * 10) WHERE RN >=(#{page} -1) * 10 +1]]>
   </select>  


<select id="totalCount_ing" parameterType="String" resultType="int" >
      SELECT count(*) FROM PF_BOARD WHERE PROJECT_STATE = '진행중'
   </select>
   
    <select id="totalCount_end" parameterType="String" resultType="int" >
      SELECT count(*) FROM PF_BOARD WHERE PROJECT_STATE = '완료'
   </select>
   
   <select id="totalCount_detail" parameterType="map" resultType="int" >
      <![CDATA[SELECT count(*) FROM PF_BOARD WHERE REGEXP_LIKE(PROJECT_CATEGORY, #{category1})AND PROJECT_MONEY <= #{category2}]]>
   </select>
   
   <select id="totalCount" resultType="int">
      SELECT count(*) FROM PF_BOARD 
   </select>
   
   <select id="totalCount_title" parameterType="String" resultType="int" >
      SELECT count(*) FROM PF_BOARD WHERE BOARD_TITLE LIKE '%'||#{board_title}||'%'
   </select>
   
<!--    <select id="selectBoardCount" resultType="PF_BoardDto"> -->
<!--       SELECT COUNT(BOARD_NO) FROM PF_BOARD -->
<!--    </select> -->
	
	<select id="insertBoard" resultType="PF_BoardDto">
		INSERT INTO PF_BOARD VALUES(PF_BOARD_SEQ.NEXTVAL, #{board_title}, #{board_content}, #{project_money}, #{project_term}, #{project_start_day}, #{recruit_date}, #{recruit_personnel}, #{project_category}, #{project_type}, #{board_file}, '검수 중', TO_CHAR(SYSDATE, 'YYYY-MM-DD'), #{user_no})
	</select>
	
	<select id="updateBoard" parameterType="PF_BoardDto">
		UPDATE PF_BOARD SET BOARD_TITLE = #{board_title}, BOARD_CONTENT = #{board_content}, PROJECT_MONEY = #{project_money}, PROJECT_TERM = #{project_term}, PROJECT_START_DAY = #{project_start_day}, RECRUIT_DATE = #{recruit_date}, RECRUIT_PERSONNEL = #{recruit_personnel}, PROJECT_CATEGORY = #{project_category}, PROJECT_TYPE = #{project_type}, BOARD_FILE = #{board_file}, BOARD_REGDATE = SYSDATE WHERE BOARD_NO = #{board_no}
	</select>
	
	<select id="selectBoard" resultType="PF_BoardDto" parameterType="int">
		SELECT * FROM PF_BOARD WHERE BOARD_NO = #{board_no}
	</select>
	
	
	<!-- 댓글이 있을 경우에 댓글 먼저 삭제되고 글이 삭제되는 걸로 바꿔줘야 함 -->
	<select id="deleteBoard">
		DELETE FROM PF_BOARD WHERE BOARD_NO = #{board_no}
	</select>
	
	
	
	
      <!-- 관심프로젝트 표시 -->
   <update id="LikeUpdate" parameterType="int">
      UPDATE PF_BOARD SET BOARD_LIKE= DECODE(BOARD_LIKE,NULL,'좋아','좋아',NULL,'좋아'),LIKEUSER_NO=#{likeuser_no}
      WHERE BOARD_NO = #{board_no}
   </update>   
   
   <select id="Board_like" resultType="PF_BoardDto" parameterType="int">
      SELECT * FROM PF_BOARD
      WHERE BOARD_LIKE = '좋아'
      AND LIKEUSER_NO = #{user_no}
   </select>
	

</mapper>